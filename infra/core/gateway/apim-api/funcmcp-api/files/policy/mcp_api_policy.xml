<!--
    - Policies are applied in the order they appear.
    - Position <base/> inside a section to inherit policies from the outer scope.
    - Comments within policies are not preserved.
-->
<!-- Add policies as children to the <inbound>, <outbound>, <backend>, and <on-error> elements -->
<policies>
    <!-- Throttle, authorize, validate, cache, or transform the requests -->
    <inbound>
        <base />
        <rate-limit-by-key calls="20" renewal-period="60" counter-key="@(context.Request.IpAddress)" />
        <set-header name="x-functions-key" exists-action="override">
            <value>{{${function_host_key}}}</value>
        </set-header>
        <choose>
            <when condition="@(context.Request.Method == "GET")">
                <set-header name="Accept" exists-action="override">
                    <value>text/event-stream</value>
                </set-header>
                <set-header name="Cache-Control" exists-action="override">
                    <value>no-cache</value>
                </set-header>
            </when>
        </choose>
    </inbound>
    <!-- Control if and how the requests are forwarded to services  -->
    <backend>
        <!-- ★ SSEはバッファ無効が必須 -->
        <forward-request buffer-response="false" timeout="300" />
    </backend>
    <!-- Customize the responses -->
    <outbound>
        <base />
        <choose>
            <when condition="@(context.Request.Method == "GET")">
                <set-header name="Content-Type" exists-action="override">
                    <value>text/event-stream</value>
                </set-header>
            </when>
        </choose>
    </outbound>
    <!-- Handle exceptions and customize error responses  -->
    <on-error>
        <base />
    </on-error>
</policies>
